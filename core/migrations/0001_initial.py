# Generated by Django 2.2.5 on 2019-09-30 23:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ParameterValueWeight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('weight', models.CharField(max_length=50)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Parameter')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RiskRule',
            fields=[
                ('id', models.UUIDField(help_text='ID Ãºnico', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('rules', models.ManyToManyField(to='core.ParameterValueWeight')),
                ('tags', models.ManyToManyField(to='core.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='parametervalueweight',
            name='tags',
            field=models.ManyToManyField(to='core.Tag'),
        ),
        migrations.AddField(
            model_name='parameter',
            name='tags',
            field=models.ManyToManyField(to='core.Tag'),
        ),
    ]
